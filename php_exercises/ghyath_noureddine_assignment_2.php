<?php

/*
Assignment 2
Made by Ghyath Noureddine

remove # for testing

 */

// Ex-1

function loopFactorial($num)
{
    $res = 1;
    for ($i = 1; $i <= $num; $i++) {
        $res = $res * $i;
    }
    return $res;
}

# echo loopFactorial(5);

// Ex-2

for ($i = 1; $i <= 8; $i++) {
    for ($j = 1; $j <= $i; $j++) {
        print("*");
    }
    print("\n");
}

// Ex-3

$arr = [3, 4, 5, 1, 3, 5, 32, 6342, 513, 61, 5];

// First method
$min = $arr[0];
$max = $arr[0];

foreach ($arr as $val) {
    if ($min > $val) {
        $min = $val;
    }
    if ($max < $val) {
        $max = $val;
    }
}

# echo $min . " " . $max;

// Second Method

/*
sort($arr);
$min = $arr[0];
$max = $arr[count($arr) - 1]; */

// Ex-4

function reverseElements($arr)
{
    $res = [];
    foreach ($arr as $val) {
        array_unshift($res, $val);
    }
    return $res;
}

# print_r(reverseElements([1, 2, 3, 4, 5, 6, 7, 8, 9]));

// Ex-5

$even = [];
$odd = [];

$arr = [1, 2, 3, 4, 5, 6, 7, 8, 9];

foreach ($arr as $val) {
    if ($val % 2 == 0) {
        array_push($even, $val);
    } else {
        array_push($odd, $val);
    }
}

# print_r($even);
# print_r($odd);

// Ex-6

function binaryToDecimal($bin)
{
    $res = 0;
    for ($i = 0; $bin != 0; $i++) {
        $temp = $bin % 10;
        $res += $temp * pow(2, $i);
        $bin = intval($bin / 10);
    }
    return $res;
}

# echo binaryToDecimal(101010001);

// Ex-7

$arr = array("Zero" => 0, "One" => 1, "Two" => 2, "Three" => 10, "Four" => 9);
$maxIdx = "";
$maxVal = 0;
foreach ($arr as $idx => $val) {
    if ($maxVal < $val) {
        $maxVal = $val;
        $maxIdx = $idx;
    }
}

echo $maxIdx . "\n";

// Ex-8
$list1 = "4, 5, 6, 7";
$list2 = "4, 5, 7, 8";

// Using Built-in functions
$list1 = explode(", ", $list1);
$list2 = explode(", ", $list2);

// Join the unique array generated by merging the 2 arrays list1 and list2 after exploding by ", "

$res = implode(", ", array_unique(array_merge($list1, $list2)));

echo $res . "\n";

// Scratch
$res = $list1;

// Add all list2 values that are not already in res - res = $list1 - .
foreach ($list2 as $val) {
    $found = false;
    foreach ($res as $resVal) {
        if ($val === $resVal) {
            $found = true;
        }
    }

    if (!$found) {
        $res[] = $val;
    }
}
$resStr = "";
// use sort($res) to sort the array
foreach ($res as $val) {
    $resStr .= $val . ", ";
}

echo $resStr . "\n";

// Ex-9

function removeSpecified($arr, $val)
{
    $res = [];
    foreach ($arr as $idx => $value) {
        if ($value === $val) {
            // We can mutate the orginal array using the below 2 lines
            // $arr[$idx] = $arr[count($arr) - 1];
            // $arr[count($arr) - 1] = null;
        } else {
            $res[] = $value;
        }
    }
    return $res;
}

print_r(removeSpecified([3, 4, 5, 6], 6));

// Ex-10

function setUnion($arr1, $arr2)
{
    $res = $arr1;
    foreach ($res as $val1) {
        $found = false;
        foreach ($arr2 as $val2) {
            if ($val1 == $val2) {
                $found = true;
            }
        }

        if (!$found) {
            $res[] = $val1;
        }
    }

    return $res;
}

print_r(setUnion([3, 4, 5, 6], [2, 3, 4, 5, 6]));
